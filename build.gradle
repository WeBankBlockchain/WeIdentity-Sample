
buildscript {
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        mavenLocal()
        mavenCentral()//依赖Maven仓库
    }
    dependencies {
        //使用1.5.4.RELEASE版本的Spring框架
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE")
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.5"
    }
}

plugins {
    id "com.github.spotbugs" version "1.6.5"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"

version = "1.0.0"


List lombok = [
    "org.projectlombok:lombok:1.16.14"
]

List logger = [
    "org.slf4j:jul-to-slf4j:1.7.10",
    "org.apache.logging.log4j:log4j-api:2.1",
    "org.apache.logging.log4j:log4j-core:2.1",
    "org.apache.logging.log4j:log4j-slf4j-impl:2.1",
    "org.apache.logging.log4j:log4j-web:2.1"
]

def spring_version = "4.1.8.RELEASE"
List spring = [
    "org.springframework:spring-core:$spring_version",
    "org.springframework:spring-beans:$spring_version",
    "org.springframework:spring-context:$spring_version",
    "org.springframework:spring-tx:$spring_version",
    "org.springframework:spring-jdbc:$spring_version",
    "org.springframework:spring-test:$spring_version"
]

// junit test
List junit = [
    "junit:junit:4.12",
    "org.springframework:spring-test:$spring_version"
]

List apache_commons = [
    "org.apache.commons:commons-collections4:4.1",
    "org.apache.commons:commons-lang3:3.5",
    "commons-cli:commons-cli:1.3.1"
]

List jmockit = [
    "org.jmockit:jmockit:1.9"
]

List jackson = [
    "com.fasterxml.jackson.core:jackson-databind:2.8.8.1"
]

List weidentity_contract = [
    "com.webank:weidentity-contract-java:1.1.0"
]

List mysql_driver = [
    "mysql:mysql-connector-java:5.1.44"
]


// In this section you declare the dependencies for your production and test code
List web3sdk_dependencies = [
    "io.netty:netty-all:4.1.15.Final",
    "io.netty:netty-tcnative:2.0.0.Final",
    "com.google.guava:guava:19.0",
    "com.github.fge:json-schema-validator:2.2.6",
    "org.apache.httpcomponents:httpclient:4.5.2",
    "org.bouncycastle:bcprov-jdk15on:1.54",
    "com.lambdaworks:scrypt:1.4.0",
    "com.squareup:javapoet:1.7.0",
    "io.reactivex:rxjava:1.2.4",
    "com.github.jnr:jnr-unixsocket:0.15"
]

//添加编译时的依赖
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web"){
        exclude group:"ch.qos.logback"
    }
    //compile group: 'com.webank', name: 'weidentity-java-sdk', version: '1.1.+'
    compile logger, lombok, apache_commons, jackson, web3sdk_dependencies, weidentity_contract,mysql_driver
    compile fileTree(dir:'libs', include:'*.jar')
}

//生成的jar包包名和版本
jar {
    destinationDir file('dist/app')
    archiveName project.name + '.jar'
    
    doFirst {
   		exclude '/*.*'
    }
    
    doLast {
        copy {
            from file('src/main/resources/')
            into 'dist/conf'
        }
        copy {
            from configurations.compile
            into 'dist/lib'
        }
        mkdir 'dist/logs'
    }
}

build {
    doLast {
        delete "dist/app/" + project.name + ".jar"
        file("dist/app/" + project.name + ".jar.original").renameTo("dist/app/" + project.name + ".jar")
        print project.name
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

//设置jdk的版本
sourceCompatibility = 1.8
targetCompatibility = 1.8


clean {
    delete("dist")
}


checkstyle {
    ignoreFailures false
    showViolations true
    toolVersion '8.12'
    configProperties.projectDir = project.projectDir
    checkstyleMain.configFile = new File(project.projectDir, '/config/checkstyle/webank_google_checks.xml')
}

tasks.withType(Checkstyle) {
    include '**/*.java'
    reports {
        xml.enabled false
        html.enabled true
    }
}

spotbugs {
    ignoreFailures = true
    showProgress = true
    toolVersion = "3.1.8"
    effort = "max"
    reportLevel = "low"
    excludeFilter = file("${project.rootDir}/config/spotbugs/spotbugs_filter.xml")
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/spotbugs.xsl')
    }
}